/*
 * Copyright 2017 Google, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
    maven { url "http://dl.bintray.com/spinnaker/gradle" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath 'com.netflix.spinnaker.gradle:spinnaker-gradle-project:3.12.0'
  }
}

apply plugin: 'spinnaker.project'
apply plugin: 'nebula.ospackage'

group = "com.netflix.spinnaker.monitoring"

String toVers(String v) {
  int idx = v.indexOf('-')
  if (idx != -1) {
    return v.substring(0, idx)
  }
  return v
}

task daemonDeb(type: Deb) {

  // common installation paths 
  def spinnakerMonitoringHome = "/opt/" + project.name

  // global package requirements
  packageName = project.name + '-daemon'
  version = toVers(project.version.toString())
  release = '3'

  requires('python-pip')

  // installer scripts
  postInstall = file('pkg_scripts/postInstall.sh')
  preInstall = file('pkg_scripts/preInstall.sh')

  // source code in subdirectory
  from(project.name) {
    into spinnakerMonitoringHome + '/' + project.name
  }

  from(file('requirements.txt')) {
    into('/opt/spinnaker-monitoring')
  }

  from('bin') {
    into spinnakerMonitoringHome + '/bin'
    fileMode  0755
  }  

  from(file('spinnaker-monitoring.yml')) {
    into('/opt/spinnaker-monitoring')
  }

  from('registry.dev') {
    into spinnakerMonitoringHome + '/registry.example'
    fileMode  0600
  }  

  from(file('etc/init/spinnaker-monitoring.conf')) {
    into('/etc/init')
    user  'root'
    permissionGroup  'root'
    fileType  CONFIG | NOREPLACE
  }
}

task thirdPartyDeb(type: Deb) {
  def spinnakerMonitoringHome = "/opt/" + project.name

  packageName = project.name + '-third-party'
  version = toVers(project.version.toString())
  release = 3

  from('third_party') {
    into spinnakerMonitoringHome + '/third_party'
  }
}

task test(type: Exec) {
  workingDir "$projectDir"
  commandLine './tests/run_tests.sh'
}

tasks.thirdPartyDeb.dependsOn('daemonDeb')
tasks.buildDeb.dependsOn('thirdPartyDeb')

defaultTasks ':test'
