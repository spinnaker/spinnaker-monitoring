{
  "read_only": false, 
  "graphs": [
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:gate.hystrix.rollingCountShortCircuited{*} by {metricgroup})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars"
          }, 
          {
            "q": "diff(sum:igor.hystrix.rollingCountShortCircuited{*} by {metricgroup})", 
            "type": "bars"
          }, 
          {
            "q": "diff(sum:front50.hystrix.rollingCountShortCircuited{*} by {metricgroup})", 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Hystrix Short Circuited (global)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:front50.hystrix.countExceptionsThrown{*})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "line"
          }, 
          {
            "q": "diff(sum:igor.hystrix.countExceptionsThrown{*}.as_count())", 
            "type": "bars"
          }, 
          {
            "q": "diff(sum:gate.hystrix.countExceptionsThrown{*})", 
            "type": "line"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Hystrix Exceptions (global)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:orca.task.invocations{executiontype:orchestration,status:running} by {taskname})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Active Orchestrations (orca)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:orca.task.invocations{executiontype:orchestration,status:succeeded} by {taskname})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars", 
            "style": {
              "palette": "cool"
            }
          }, 
          {
            "q": "- diff(sum:orca.task.invocations{executiontype:orchestration,status:terminal} by {taskname})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars", 
            "style": {
              "palette": "warm"
            }
          }
        ], 
        "autoscale": true
      }, 
      "title": "Completed Orchestrations (orca)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:orca.task.invocations{status:running,executiontype:pipeline} by {taskname})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Active Pipelines (orca)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:orca.task.invocations{status:succeeded,executiontype:pipeline} by {taskname})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars", 
            "style": {
              "palette": "cool"
            }
          }, 
          {
            "q": " - diff(sum:orca.task.invocations{status:terminal,executiontype:pipeline} by {taskname})", 
            "style": {
              "palette": "warm"
            }, 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Completed Pipelines (orca)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:clouddriver.operations_count{success:true} by {operationtype}), - diff(sum:clouddriver.operations_count{!success:true} by {operationtype})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Active Threads (orca)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:echo.pipelines.triggered{*} by {application})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Pipelines Triggered (echo)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:rosco.bakesActive{*})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "line"
          }, 
          {
            "q": "diff(sum:rosco.bakesRequested{*} by {flavor})", 
            "conditional_formats": [], 
            "type": "bars", 
            "style": {
              "palette": "cool"
            }
          }, 
          {
            "q": "diff(sum:rosco.bakesCompleted_count{success:false} by {region})", 
            "conditional_formats": [], 
            "type": "bars", 
            "style": {
              "palette": "warm"
            }
          }
        ], 
        "autoscale": true
      }, 
      "title": "Bake Activity (rosco)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "sum:front50.storageServiceSupport.cacheSize{*} by {objecttype}", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Item Cache Size (front50)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:clouddriver.operations_count{success:true} by {operationtype})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Successful Operations (clouddriver)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "diff(sum:clouddriver.operations_count{success:false} by {operationtype})", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "bars"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Failed Operations (clouddriver)"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "avg:system.load.1{*}", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "line"
          }, 
          {
            "q": "avg:system.mem.used{*} / avg:system.mem.total{*}", 
            "type": "line"
          }
        ], 
        "autoscale": true
      }, 
      "title": "System Load and Pct Memory Used"
    }, 
    {
      "definition": {
        "viz": "timeseries", 
        "requests": [
          {
            "q": "avg:front50.jvm.memory.used{*}", 
            "aggregator": "avg", 
            "conditional_formats": [], 
            "type": "line"
          }, 
          {
            "q": "avg:clouddriver.jvm.memory.used{*}", 
            "type": "line"
          }, 
          {
            "q": "avg:orca.jvm.memory.used{*}", 
            "type": "line"
          }, 
          {
            "q": "avg:gate.jvm.memory.used{*}", 
            "type": "line"
          }, 
          {
            "q": "avg:igor.jvm.memory.used{*}", 
            "type": "line"
          }, 
          {
            "q": "avg:rosco.jvm.memory.used{*}", 
            "type": "line"
          }, 
          {
            "q": "avg:echo.jvm.memory.used{*}", 
            "type": "line"
          }
        ], 
        "autoscale": true
      }, 
      "title": "Microservice JVM Memory Used"
    }
  ], 
  "description": "A bare-bones dashboard for monitoring a Spinnaker deployment", 
  "title": "Minimal Spinnaker"
}
